// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KYA.proto

package com.nvbyte.kya;

public final class KYA {
  private KYA() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CheckInResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required double nextRequestTimeInSeconds = 1;
    /**
     * <code>required double nextRequestTimeInSeconds = 1;</code>
     *
     * <pre>
     * Next suggested time delta for check in.
     * </pre>
     */
    boolean hasNextRequestTimeInSeconds();
    /**
     * <code>required double nextRequestTimeInSeconds = 1;</code>
     *
     * <pre>
     * Next suggested time delta for check in.
     * </pre>
     */
    double getNextRequestTimeInSeconds();

    // required bool requestFeedback = 2;
    /**
     * <code>required bool requestFeedback = 2;</code>
     *
     * <pre>
     * True if feedback should be requested from user. False otherwise.
     * </pre>
     */
    boolean hasRequestFeedback();
    /**
     * <code>required bool requestFeedback = 2;</code>
     *
     * <pre>
     * True if feedback should be requested from user. False otherwise.
     * </pre>
     */
    boolean getRequestFeedback();

    // required .com.nvbyte.kya.GeoZone currentZone = 3;
    /**
     * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
     *
     * <pre>
     * The current geozone on which the user is.
     * </pre>
     */
    boolean hasCurrentZone();
    /**
     * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
     *
     * <pre>
     * The current geozone on which the user is.
     * </pre>
     */
    GeoZone getCurrentZone();
    /**
     * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
     *
     * <pre>
     * The current geozone on which the user is.
     * </pre>
     */
    GeoZoneOrBuilder getCurrentZoneOrBuilder();
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.CheckInResponse}
   *
   * <pre>
   * Message sent from server to wear device, when a check in occurs.
   * The notification logic is deferred to the Android device. The folloing
   * scenarios can occur during the application's runtime:
   *  (i)   lastLevel = newLevel : User has not moved, or has moved between
   *        areas of the same risk level.
   *  (ii)  lastLevel &lt; newLevel : User moving in the direciton of risk!
   *  (iii) lastLevel &gt; newLevel : User moving away from risk.
   * </pre>
   */
  public static final class CheckInResponse extends
      com.google.protobuf.GeneratedMessage
      implements CheckInResponseOrBuilder {
    // Use CheckInResponse.newBuilder() to construct.
    private CheckInResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CheckInResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CheckInResponse defaultInstance;
    public static CheckInResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CheckInResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CheckInResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              nextRequestTimeInSeconds_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              requestFeedback_ = input.readBool();
              break;
            }
            case 26: {
              GeoZone.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = currentZone_.toBuilder();
              }
              currentZone_ = input.readMessage(GeoZone.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentZone_);
                currentZone_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_CheckInResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_CheckInResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CheckInResponse.class, Builder.class);
    }

    public static com.google.protobuf.Parser<CheckInResponse> PARSER =
        new com.google.protobuf.AbstractParser<CheckInResponse>() {
      public CheckInResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CheckInResponse(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<CheckInResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double nextRequestTimeInSeconds = 1;
    public static final int NEXTREQUESTTIMEINSECONDS_FIELD_NUMBER = 1;
    private double nextRequestTimeInSeconds_;
    /**
     * <code>required double nextRequestTimeInSeconds = 1;</code>
     *
     * <pre>
     * Next suggested time delta for check in.
     * </pre>
     */
    public boolean hasNextRequestTimeInSeconds() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double nextRequestTimeInSeconds = 1;</code>
     *
     * <pre>
     * Next suggested time delta for check in.
     * </pre>
     */
    public double getNextRequestTimeInSeconds() {
      return nextRequestTimeInSeconds_;
    }

    // required bool requestFeedback = 2;
    public static final int REQUESTFEEDBACK_FIELD_NUMBER = 2;
    private boolean requestFeedback_;
    /**
     * <code>required bool requestFeedback = 2;</code>
     *
     * <pre>
     * True if feedback should be requested from user. False otherwise.
     * </pre>
     */
    public boolean hasRequestFeedback() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool requestFeedback = 2;</code>
     *
     * <pre>
     * True if feedback should be requested from user. False otherwise.
     * </pre>
     */
    public boolean getRequestFeedback() {
      return requestFeedback_;
    }

    // required .com.nvbyte.kya.GeoZone currentZone = 3;
    public static final int CURRENTZONE_FIELD_NUMBER = 3;
    private GeoZone currentZone_;
    /**
     * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
     *
     * <pre>
     * The current geozone on which the user is.
     * </pre>
     */
    public boolean hasCurrentZone() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
     *
     * <pre>
     * The current geozone on which the user is.
     * </pre>
     */
    public GeoZone getCurrentZone() {
      return currentZone_;
    }
    /**
     * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
     *
     * <pre>
     * The current geozone on which the user is.
     * </pre>
     */
    public GeoZoneOrBuilder getCurrentZoneOrBuilder() {
      return currentZone_;
    }

    private void initFields() {
      nextRequestTimeInSeconds_ = 0D;
      requestFeedback_ = false;
      currentZone_ = GeoZone.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNextRequestTimeInSeconds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequestFeedback()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentZone()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCurrentZone().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, nextRequestTimeInSeconds_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, requestFeedback_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, currentZone_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, nextRequestTimeInSeconds_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, requestFeedback_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, currentZone_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static CheckInResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CheckInResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CheckInResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CheckInResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CheckInResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static CheckInResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static CheckInResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static CheckInResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static CheckInResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static CheckInResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CheckInResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.CheckInResponse}
     *
     * <pre>
     * Message sent from server to wear device, when a check in occurs.
     * The notification logic is deferred to the Android device. The folloing
     * scenarios can occur during the application's runtime:
     *  (i)   lastLevel = newLevel : User has not moved, or has moved between
     *        areas of the same risk level.
     *  (ii)  lastLevel &lt; newLevel : User moving in the direciton of risk!
     *  (iii) lastLevel &gt; newLevel : User moving away from risk.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CheckInResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_CheckInResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_CheckInResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CheckInResponse.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.CheckInResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCurrentZoneFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nextRequestTimeInSeconds_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        requestFeedback_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (currentZoneBuilder_ == null) {
          currentZone_ = GeoZone.getDefaultInstance();
        } else {
          currentZoneBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_CheckInResponse_descriptor;
      }

      public CheckInResponse getDefaultInstanceForType() {
        return CheckInResponse.getDefaultInstance();
      }

      public CheckInResponse build() {
        CheckInResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CheckInResponse buildPartial() {
        CheckInResponse result = new CheckInResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nextRequestTimeInSeconds_ = nextRequestTimeInSeconds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requestFeedback_ = requestFeedback_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (currentZoneBuilder_ == null) {
          result.currentZone_ = currentZone_;
        } else {
          result.currentZone_ = currentZoneBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CheckInResponse) {
          return mergeFrom((CheckInResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CheckInResponse other) {
        if (other == CheckInResponse.getDefaultInstance()) return this;
        if (other.hasNextRequestTimeInSeconds()) {
          setNextRequestTimeInSeconds(other.getNextRequestTimeInSeconds());
        }
        if (other.hasRequestFeedback()) {
          setRequestFeedback(other.getRequestFeedback());
        }
        if (other.hasCurrentZone()) {
          mergeCurrentZone(other.getCurrentZone());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNextRequestTimeInSeconds()) {
          
          return false;
        }
        if (!hasRequestFeedback()) {
          
          return false;
        }
        if (!hasCurrentZone()) {
          
          return false;
        }
        if (!getCurrentZone().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CheckInResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CheckInResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double nextRequestTimeInSeconds = 1;
      private double nextRequestTimeInSeconds_ ;
      /**
       * <code>required double nextRequestTimeInSeconds = 1;</code>
       *
       * <pre>
       * Next suggested time delta for check in.
       * </pre>
       */
      public boolean hasNextRequestTimeInSeconds() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double nextRequestTimeInSeconds = 1;</code>
       *
       * <pre>
       * Next suggested time delta for check in.
       * </pre>
       */
      public double getNextRequestTimeInSeconds() {
        return nextRequestTimeInSeconds_;
      }
      /**
       * <code>required double nextRequestTimeInSeconds = 1;</code>
       *
       * <pre>
       * Next suggested time delta for check in.
       * </pre>
       */
      public Builder setNextRequestTimeInSeconds(double value) {
        bitField0_ |= 0x00000001;
        nextRequestTimeInSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double nextRequestTimeInSeconds = 1;</code>
       *
       * <pre>
       * Next suggested time delta for check in.
       * </pre>
       */
      public Builder clearNextRequestTimeInSeconds() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nextRequestTimeInSeconds_ = 0D;
        onChanged();
        return this;
      }

      // required bool requestFeedback = 2;
      private boolean requestFeedback_ ;
      /**
       * <code>required bool requestFeedback = 2;</code>
       *
       * <pre>
       * True if feedback should be requested from user. False otherwise.
       * </pre>
       */
      public boolean hasRequestFeedback() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool requestFeedback = 2;</code>
       *
       * <pre>
       * True if feedback should be requested from user. False otherwise.
       * </pre>
       */
      public boolean getRequestFeedback() {
        return requestFeedback_;
      }
      /**
       * <code>required bool requestFeedback = 2;</code>
       *
       * <pre>
       * True if feedback should be requested from user. False otherwise.
       * </pre>
       */
      public Builder setRequestFeedback(boolean value) {
        bitField0_ |= 0x00000002;
        requestFeedback_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool requestFeedback = 2;</code>
       *
       * <pre>
       * True if feedback should be requested from user. False otherwise.
       * </pre>
       */
      public Builder clearRequestFeedback() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requestFeedback_ = false;
        onChanged();
        return this;
      }

      // required .com.nvbyte.kya.GeoZone currentZone = 3;
      private GeoZone currentZone_ = GeoZone.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          GeoZone, GeoZone.Builder, GeoZoneOrBuilder> currentZoneBuilder_;
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public boolean hasCurrentZone() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public GeoZone getCurrentZone() {
        if (currentZoneBuilder_ == null) {
          return currentZone_;
        } else {
          return currentZoneBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public Builder setCurrentZone(GeoZone value) {
        if (currentZoneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentZone_ = value;
          onChanged();
        } else {
          currentZoneBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public Builder setCurrentZone(
          GeoZone.Builder builderForValue) {
        if (currentZoneBuilder_ == null) {
          currentZone_ = builderForValue.build();
          onChanged();
        } else {
          currentZoneBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public Builder mergeCurrentZone(GeoZone value) {
        if (currentZoneBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              currentZone_ != GeoZone.getDefaultInstance()) {
            currentZone_ =
              GeoZone.newBuilder(currentZone_).mergeFrom(value).buildPartial();
          } else {
            currentZone_ = value;
          }
          onChanged();
        } else {
          currentZoneBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public Builder clearCurrentZone() {
        if (currentZoneBuilder_ == null) {
          currentZone_ = GeoZone.getDefaultInstance();
          onChanged();
        } else {
          currentZoneBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public GeoZone.Builder getCurrentZoneBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCurrentZoneFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      public GeoZoneOrBuilder getCurrentZoneOrBuilder() {
        if (currentZoneBuilder_ != null) {
          return currentZoneBuilder_.getMessageOrBuilder();
        } else {
          return currentZone_;
        }
      }
      /**
       * <code>required .com.nvbyte.kya.GeoZone currentZone = 3;</code>
       *
       * <pre>
       * The current geozone on which the user is.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          GeoZone, GeoZone.Builder, GeoZoneOrBuilder>
          getCurrentZoneFieldBuilder() {
        if (currentZoneBuilder_ == null) {
          currentZoneBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GeoZone, GeoZone.Builder, GeoZoneOrBuilder>(
                  currentZone_,
                  getParentForChildren(),
                  isClean());
          currentZone_ = null;
        }
        return currentZoneBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.CheckInResponse)
    }

    static {
      defaultInstance = new CheckInResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.CheckInResponse)
  }

  public interface TelemetryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userID = 1;
    /**
     * <code>required string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    boolean hasUserID();
    /**
     * <code>required string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    String getUserID();
    /**
     * <code>required string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIDBytes();

    // required string notificationID = 2;
    /**
     * <code>required string notificationID = 2;</code>
     *
     * <pre>
     *Identifier of a notification
     * </pre>
     */
    boolean hasNotificationID();
    /**
     * <code>required string notificationID = 2;</code>
     *
     * <pre>
     *Identifier of a notification
     * </pre>
     */
    String getNotificationID();
    /**
     * <code>required string notificationID = 2;</code>
     *
     * <pre>
     *Identifier of a notification
     * </pre>
     */
    com.google.protobuf.ByteString
        getNotificationIDBytes();

    // required int32 zoneID = 3;
    /**
     * <code>required int32 zoneID = 3;</code>
     *
     * <pre>
     * Zone where the record was captured or obtained
     * </pre>
     */
    boolean hasZoneID();
    /**
     * <code>required int32 zoneID = 3;</code>
     *
     * <pre>
     * Zone where the record was captured or obtained
     * </pre>
     */
    int getZoneID();

    // optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
     *
     * <pre>
     *Heart rate mesaurement record that may come in a telemetry record
     * </pre>
     */
    boolean hasHeartRate();
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
     *
     * <pre>
     *Heart rate mesaurement record that may come in a telemetry record
     * </pre>
     */
    Telemetry.HeartRate getHeartRate();
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
     *
     * <pre>
     *Heart rate mesaurement record that may come in a telemetry record
     * </pre>
     */
    Telemetry.HeartRateOrBuilder getHeartRateOrBuilder();

    // optional .com.nvbyte.kya.Telemetry.Survey survey = 5;
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
     *
     * <pre>
     *Survey response record that may come in a telemetry record
     * </pre>
     */
    boolean hasSurvey();
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
     *
     * <pre>
     *Survey response record that may come in a telemetry record
     * </pre>
     */
    Telemetry.Survey getSurvey();
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
     *
     * <pre>
     *Survey response record that may come in a telemetry record
     * </pre>
     */
    Telemetry.SurveyOrBuilder getSurveyOrBuilder();
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.Telemetry}
   *
   * <pre>
   * Telemetry
   * </pre>
   */
  public static final class Telemetry extends
      com.google.protobuf.GeneratedMessage
      implements TelemetryOrBuilder {
    // Use Telemetry.newBuilder() to construct.
    private Telemetry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Telemetry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Telemetry defaultInstance;
    public static Telemetry getDefaultInstance() {
      return defaultInstance;
    }

    public Telemetry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Telemetry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userID_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              notificationID_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              zoneID_ = input.readInt32();
              break;
            }
            case 34: {
              HeartRate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = heartRate_.toBuilder();
              }
              heartRate_ = input.readMessage(HeartRate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heartRate_);
                heartRate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              Survey.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = survey_.toBuilder();
              }
              survey_ = input.readMessage(Survey.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(survey_);
                survey_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_Telemetry_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_Telemetry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Telemetry.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Telemetry> PARSER =
        new com.google.protobuf.AbstractParser<Telemetry>() {
      public Telemetry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Telemetry(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Telemetry> getParserForType() {
      return PARSER;
    }

    public interface HeartRateOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 before = 1;
      /**
       * <code>optional int32 before = 1;</code>
       *
       * <pre>
       *Measurement before user being notified
       * </pre>
       */
      boolean hasBefore();
      /**
       * <code>optional int32 before = 1;</code>
       *
       * <pre>
       *Measurement before user being notified
       * </pre>
       */
      int getBefore();

      // optional int32 after = 2;
      /**
       * <code>optional int32 after = 2;</code>
       *
       * <pre>
       *Measurement after user being notified
       * </pre>
       */
      boolean hasAfter();
      /**
       * <code>optional int32 after = 2;</code>
       *
       * <pre>
       *Measurement after user being notified
       * </pre>
       */
      int getAfter();
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.Telemetry.HeartRate}
     *
     * <pre>
     *Heartbeat
     * </pre>
     */
    public static final class HeartRate extends
        com.google.protobuf.GeneratedMessage
        implements HeartRateOrBuilder {
      // Use HeartRate.newBuilder() to construct.
      private HeartRate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private HeartRate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final HeartRate defaultInstance;
      public static HeartRate getDefaultInstance() {
        return defaultInstance;
      }

      public HeartRate getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private HeartRate(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                before_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                after_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_HeartRate_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_HeartRate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartRate.class, Builder.class);
      }

      public static com.google.protobuf.Parser<HeartRate> PARSER =
          new com.google.protobuf.AbstractParser<HeartRate>() {
        public HeartRate parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HeartRate(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<HeartRate> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int32 before = 1;
      public static final int BEFORE_FIELD_NUMBER = 1;
      private int before_;
      /**
       * <code>optional int32 before = 1;</code>
       *
       * <pre>
       *Measurement before user being notified
       * </pre>
       */
      public boolean hasBefore() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 before = 1;</code>
       *
       * <pre>
       *Measurement before user being notified
       * </pre>
       */
      public int getBefore() {
        return before_;
      }

      // optional int32 after = 2;
      public static final int AFTER_FIELD_NUMBER = 2;
      private int after_;
      /**
       * <code>optional int32 after = 2;</code>
       *
       * <pre>
       *Measurement after user being notified
       * </pre>
       */
      public boolean hasAfter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 after = 2;</code>
       *
       * <pre>
       *Measurement after user being notified
       * </pre>
       */
      public int getAfter() {
        return after_;
      }

      private void initFields() {
        before_ = 0;
        after_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, before_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, after_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, before_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, after_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static HeartRate parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static HeartRate parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static HeartRate parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static HeartRate parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static HeartRate parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static HeartRate parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static HeartRate parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static HeartRate parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static HeartRate parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static HeartRate parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(HeartRate prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.nvbyte.kya.Telemetry.HeartRate}
       *
       * <pre>
       *Heartbeat
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements HeartRateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return KYA.internal_static_com_nvbyte_kya_Telemetry_HeartRate_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return KYA.internal_static_com_nvbyte_kya_Telemetry_HeartRate_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  HeartRate.class, Builder.class);
        }

        // Construct using com.nvbyte.kya.KYA.Telemetry.HeartRate.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          before_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          after_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return KYA.internal_static_com_nvbyte_kya_Telemetry_HeartRate_descriptor;
        }

        public HeartRate getDefaultInstanceForType() {
          return HeartRate.getDefaultInstance();
        }

        public HeartRate build() {
          HeartRate result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public HeartRate buildPartial() {
          HeartRate result = new HeartRate(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.before_ = before_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.after_ = after_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof HeartRate) {
            return mergeFrom((HeartRate)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(HeartRate other) {
          if (other == HeartRate.getDefaultInstance()) return this;
          if (other.hasBefore()) {
            setBefore(other.getBefore());
          }
          if (other.hasAfter()) {
            setAfter(other.getAfter());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          HeartRate parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (HeartRate) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 before = 1;
        private int before_ ;
        /**
         * <code>optional int32 before = 1;</code>
         *
         * <pre>
         *Measurement before user being notified
         * </pre>
         */
        public boolean hasBefore() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 before = 1;</code>
         *
         * <pre>
         *Measurement before user being notified
         * </pre>
         */
        public int getBefore() {
          return before_;
        }
        /**
         * <code>optional int32 before = 1;</code>
         *
         * <pre>
         *Measurement before user being notified
         * </pre>
         */
        public Builder setBefore(int value) {
          bitField0_ |= 0x00000001;
          before_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 before = 1;</code>
         *
         * <pre>
         *Measurement before user being notified
         * </pre>
         */
        public Builder clearBefore() {
          bitField0_ = (bitField0_ & ~0x00000001);
          before_ = 0;
          onChanged();
          return this;
        }

        // optional int32 after = 2;
        private int after_ ;
        /**
         * <code>optional int32 after = 2;</code>
         *
         * <pre>
         *Measurement after user being notified
         * </pre>
         */
        public boolean hasAfter() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 after = 2;</code>
         *
         * <pre>
         *Measurement after user being notified
         * </pre>
         */
        public int getAfter() {
          return after_;
        }
        /**
         * <code>optional int32 after = 2;</code>
         *
         * <pre>
         *Measurement after user being notified
         * </pre>
         */
        public Builder setAfter(int value) {
          bitField0_ |= 0x00000002;
          after_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 after = 2;</code>
         *
         * <pre>
         *Measurement after user being notified
         * </pre>
         */
        public Builder clearAfter() {
          bitField0_ = (bitField0_ & ~0x00000002);
          after_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.Telemetry.HeartRate)
      }

      static {
        defaultInstance = new HeartRate(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.nvbyte.kya.Telemetry.HeartRate)
    }

    public interface SurveyOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 actualRisk = 1;
      /**
       * <code>required int32 actualRisk = 1;</code>
       *
       * <pre>
       *Risk calculated by KYA
       * </pre>
       */
      boolean hasActualRisk();
      /**
       * <code>required int32 actualRisk = 1;</code>
       *
       * <pre>
       *Risk calculated by KYA
       * </pre>
       */
      int getActualRisk();

      // required int32 perceivedRisk = 2;
      /**
       * <code>required int32 perceivedRisk = 2;</code>
       *
       * <pre>
       *Risk perceived by the user
       * </pre>
       */
      boolean hasPerceivedRisk();
      /**
       * <code>required int32 perceivedRisk = 2;</code>
       *
       * <pre>
       *Risk perceived by the user
       * </pre>
       */
      int getPerceivedRisk();
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.Telemetry.Survey}
     *
     * <pre>
     *Survey
     * </pre>
     */
    public static final class Survey extends
        com.google.protobuf.GeneratedMessage
        implements SurveyOrBuilder {
      // Use Survey.newBuilder() to construct.
      private Survey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Survey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Survey defaultInstance;
      public static Survey getDefaultInstance() {
        return defaultInstance;
      }

      public Survey getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Survey(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                actualRisk_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                perceivedRisk_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_Survey_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_Survey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Survey.class, Builder.class);
      }

      public static com.google.protobuf.Parser<Survey> PARSER =
          new com.google.protobuf.AbstractParser<Survey>() {
        public Survey parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Survey(input, extensionRegistry);
        }
      };

      @Override
      public com.google.protobuf.Parser<Survey> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 actualRisk = 1;
      public static final int ACTUALRISK_FIELD_NUMBER = 1;
      private int actualRisk_;
      /**
       * <code>required int32 actualRisk = 1;</code>
       *
       * <pre>
       *Risk calculated by KYA
       * </pre>
       */
      public boolean hasActualRisk() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 actualRisk = 1;</code>
       *
       * <pre>
       *Risk calculated by KYA
       * </pre>
       */
      public int getActualRisk() {
        return actualRisk_;
      }

      // required int32 perceivedRisk = 2;
      public static final int PERCEIVEDRISK_FIELD_NUMBER = 2;
      private int perceivedRisk_;
      /**
       * <code>required int32 perceivedRisk = 2;</code>
       *
       * <pre>
       *Risk perceived by the user
       * </pre>
       */
      public boolean hasPerceivedRisk() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 perceivedRisk = 2;</code>
       *
       * <pre>
       *Risk perceived by the user
       * </pre>
       */
      public int getPerceivedRisk() {
        return perceivedRisk_;
      }

      private void initFields() {
        actualRisk_ = 0;
        perceivedRisk_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasActualRisk()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPerceivedRisk()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, actualRisk_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, perceivedRisk_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, actualRisk_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, perceivedRisk_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @Override
      protected Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static Survey parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Survey parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Survey parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Survey parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Survey parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Survey parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static Survey parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static Survey parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static Survey parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Survey parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Survey prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.nvbyte.kya.Telemetry.Survey}
       *
       * <pre>
       *Survey
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements SurveyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return KYA.internal_static_com_nvbyte_kya_Telemetry_Survey_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return KYA.internal_static_com_nvbyte_kya_Telemetry_Survey_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Survey.class, Builder.class);
        }

        // Construct using com.nvbyte.kya.KYA.Telemetry.Survey.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          actualRisk_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          perceivedRisk_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return KYA.internal_static_com_nvbyte_kya_Telemetry_Survey_descriptor;
        }

        public Survey getDefaultInstanceForType() {
          return Survey.getDefaultInstance();
        }

        public Survey build() {
          Survey result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public Survey buildPartial() {
          Survey result = new Survey(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.actualRisk_ = actualRisk_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.perceivedRisk_ = perceivedRisk_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Survey) {
            return mergeFrom((Survey)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Survey other) {
          if (other == Survey.getDefaultInstance()) return this;
          if (other.hasActualRisk()) {
            setActualRisk(other.getActualRisk());
          }
          if (other.hasPerceivedRisk()) {
            setPerceivedRisk(other.getPerceivedRisk());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasActualRisk()) {
            
            return false;
          }
          if (!hasPerceivedRisk()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Survey parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Survey) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 actualRisk = 1;
        private int actualRisk_ ;
        /**
         * <code>required int32 actualRisk = 1;</code>
         *
         * <pre>
         *Risk calculated by KYA
         * </pre>
         */
        public boolean hasActualRisk() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 actualRisk = 1;</code>
         *
         * <pre>
         *Risk calculated by KYA
         * </pre>
         */
        public int getActualRisk() {
          return actualRisk_;
        }
        /**
         * <code>required int32 actualRisk = 1;</code>
         *
         * <pre>
         *Risk calculated by KYA
         * </pre>
         */
        public Builder setActualRisk(int value) {
          bitField0_ |= 0x00000001;
          actualRisk_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 actualRisk = 1;</code>
         *
         * <pre>
         *Risk calculated by KYA
         * </pre>
         */
        public Builder clearActualRisk() {
          bitField0_ = (bitField0_ & ~0x00000001);
          actualRisk_ = 0;
          onChanged();
          return this;
        }

        // required int32 perceivedRisk = 2;
        private int perceivedRisk_ ;
        /**
         * <code>required int32 perceivedRisk = 2;</code>
         *
         * <pre>
         *Risk perceived by the user
         * </pre>
         */
        public boolean hasPerceivedRisk() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 perceivedRisk = 2;</code>
         *
         * <pre>
         *Risk perceived by the user
         * </pre>
         */
        public int getPerceivedRisk() {
          return perceivedRisk_;
        }
        /**
         * <code>required int32 perceivedRisk = 2;</code>
         *
         * <pre>
         *Risk perceived by the user
         * </pre>
         */
        public Builder setPerceivedRisk(int value) {
          bitField0_ |= 0x00000002;
          perceivedRisk_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 perceivedRisk = 2;</code>
         *
         * <pre>
         *Risk perceived by the user
         * </pre>
         */
        public Builder clearPerceivedRisk() {
          bitField0_ = (bitField0_ & ~0x00000002);
          perceivedRisk_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.Telemetry.Survey)
      }

      static {
        defaultInstance = new Survey(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.nvbyte.kya.Telemetry.Survey)
    }

    private int bitField0_;
    // required string userID = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private Object userID_;
    /**
     * <code>required string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    public boolean hasUserID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    public String getUserID() {
      Object ref = userID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIDBytes() {
      Object ref = userID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string notificationID = 2;
    public static final int NOTIFICATIONID_FIELD_NUMBER = 2;
    private Object notificationID_;
    /**
     * <code>required string notificationID = 2;</code>
     *
     * <pre>
     *Identifier of a notification
     * </pre>
     */
    public boolean hasNotificationID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string notificationID = 2;</code>
     *
     * <pre>
     *Identifier of a notification
     * </pre>
     */
    public String getNotificationID() {
      Object ref = notificationID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          notificationID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string notificationID = 2;</code>
     *
     * <pre>
     *Identifier of a notification
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNotificationIDBytes() {
      Object ref = notificationID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        notificationID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 zoneID = 3;
    public static final int ZONEID_FIELD_NUMBER = 3;
    private int zoneID_;
    /**
     * <code>required int32 zoneID = 3;</code>
     *
     * <pre>
     * Zone where the record was captured or obtained
     * </pre>
     */
    public boolean hasZoneID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 zoneID = 3;</code>
     *
     * <pre>
     * Zone where the record was captured or obtained
     * </pre>
     */
    public int getZoneID() {
      return zoneID_;
    }

    // optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;
    public static final int HEARTRATE_FIELD_NUMBER = 4;
    private HeartRate heartRate_;
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
     *
     * <pre>
     *Heart rate mesaurement record that may come in a telemetry record
     * </pre>
     */
    public boolean hasHeartRate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
     *
     * <pre>
     *Heart rate mesaurement record that may come in a telemetry record
     * </pre>
     */
    public HeartRate getHeartRate() {
      return heartRate_;
    }
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
     *
     * <pre>
     *Heart rate mesaurement record that may come in a telemetry record
     * </pre>
     */
    public HeartRateOrBuilder getHeartRateOrBuilder() {
      return heartRate_;
    }

    // optional .com.nvbyte.kya.Telemetry.Survey survey = 5;
    public static final int SURVEY_FIELD_NUMBER = 5;
    private Survey survey_;
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
     *
     * <pre>
     *Survey response record that may come in a telemetry record
     * </pre>
     */
    public boolean hasSurvey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
     *
     * <pre>
     *Survey response record that may come in a telemetry record
     * </pre>
     */
    public Survey getSurvey() {
      return survey_;
    }
    /**
     * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
     *
     * <pre>
     *Survey response record that may come in a telemetry record
     * </pre>
     */
    public SurveyOrBuilder getSurveyOrBuilder() {
      return survey_;
    }

    private void initFields() {
      userID_ = "";
      notificationID_ = "";
      zoneID_ = 0;
      heartRate_ = HeartRate.getDefaultInstance();
      survey_ = Survey.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNotificationID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZoneID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSurvey()) {
        if (!getSurvey().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNotificationIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, zoneID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, heartRate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, survey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNotificationIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, zoneID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, heartRate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, survey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Telemetry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Telemetry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Telemetry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Telemetry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Telemetry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Telemetry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Telemetry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Telemetry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Telemetry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.Telemetry}
     *
     * <pre>
     * Telemetry
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements TelemetryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Telemetry.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.Telemetry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeartRateFieldBuilder();
          getSurveyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        notificationID_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        zoneID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (heartRateBuilder_ == null) {
          heartRate_ = HeartRate.getDefaultInstance();
        } else {
          heartRateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (surveyBuilder_ == null) {
          survey_ = Survey.getDefaultInstance();
        } else {
          surveyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_Telemetry_descriptor;
      }

      public Telemetry getDefaultInstanceForType() {
        return Telemetry.getDefaultInstance();
      }

      public Telemetry build() {
        Telemetry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Telemetry buildPartial() {
        Telemetry result = new Telemetry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userID_ = userID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.notificationID_ = notificationID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.zoneID_ = zoneID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (heartRateBuilder_ == null) {
          result.heartRate_ = heartRate_;
        } else {
          result.heartRate_ = heartRateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (surveyBuilder_ == null) {
          result.survey_ = survey_;
        } else {
          result.survey_ = surveyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Telemetry) {
          return mergeFrom((Telemetry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Telemetry other) {
        if (other == Telemetry.getDefaultInstance()) return this;
        if (other.hasUserID()) {
          bitField0_ |= 0x00000001;
          userID_ = other.userID_;
          onChanged();
        }
        if (other.hasNotificationID()) {
          bitField0_ |= 0x00000002;
          notificationID_ = other.notificationID_;
          onChanged();
        }
        if (other.hasZoneID()) {
          setZoneID(other.getZoneID());
        }
        if (other.hasHeartRate()) {
          mergeHeartRate(other.getHeartRate());
        }
        if (other.hasSurvey()) {
          mergeSurvey(other.getSurvey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserID()) {
          
          return false;
        }
        if (!hasNotificationID()) {
          
          return false;
        }
        if (!hasZoneID()) {
          
          return false;
        }
        if (hasSurvey()) {
          if (!getSurvey().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Telemetry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Telemetry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userID = 1;
      private Object userID_ = "";
      /**
       * <code>required string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public boolean hasUserID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public String getUserID() {
        Object ref = userID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIDBytes() {
        Object ref = userID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public Builder setUserID(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public Builder clearUserID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userID_ = getDefaultInstance().getUserID();
        onChanged();
        return this;
      }
      /**
       * <code>required string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public Builder setUserIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userID_ = value;
        onChanged();
        return this;
      }

      // required string notificationID = 2;
      private Object notificationID_ = "";
      /**
       * <code>required string notificationID = 2;</code>
       *
       * <pre>
       *Identifier of a notification
       * </pre>
       */
      public boolean hasNotificationID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string notificationID = 2;</code>
       *
       * <pre>
       *Identifier of a notification
       * </pre>
       */
      public String getNotificationID() {
        Object ref = notificationID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          notificationID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string notificationID = 2;</code>
       *
       * <pre>
       *Identifier of a notification
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNotificationIDBytes() {
        Object ref = notificationID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          notificationID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string notificationID = 2;</code>
       *
       * <pre>
       *Identifier of a notification
       * </pre>
       */
      public Builder setNotificationID(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        notificationID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string notificationID = 2;</code>
       *
       * <pre>
       *Identifier of a notification
       * </pre>
       */
      public Builder clearNotificationID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        notificationID_ = getDefaultInstance().getNotificationID();
        onChanged();
        return this;
      }
      /**
       * <code>required string notificationID = 2;</code>
       *
       * <pre>
       *Identifier of a notification
       * </pre>
       */
      public Builder setNotificationIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        notificationID_ = value;
        onChanged();
        return this;
      }

      // required int32 zoneID = 3;
      private int zoneID_ ;
      /**
       * <code>required int32 zoneID = 3;</code>
       *
       * <pre>
       * Zone where the record was captured or obtained
       * </pre>
       */
      public boolean hasZoneID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 zoneID = 3;</code>
       *
       * <pre>
       * Zone where the record was captured or obtained
       * </pre>
       */
      public int getZoneID() {
        return zoneID_;
      }
      /**
       * <code>required int32 zoneID = 3;</code>
       *
       * <pre>
       * Zone where the record was captured or obtained
       * </pre>
       */
      public Builder setZoneID(int value) {
        bitField0_ |= 0x00000004;
        zoneID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 zoneID = 3;</code>
       *
       * <pre>
       * Zone where the record was captured or obtained
       * </pre>
       */
      public Builder clearZoneID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        zoneID_ = 0;
        onChanged();
        return this;
      }

      // optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;
      private HeartRate heartRate_ = HeartRate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          HeartRate, HeartRate.Builder, HeartRateOrBuilder> heartRateBuilder_;
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public boolean hasHeartRate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public HeartRate getHeartRate() {
        if (heartRateBuilder_ == null) {
          return heartRate_;
        } else {
          return heartRateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public Builder setHeartRate(HeartRate value) {
        if (heartRateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartRate_ = value;
          onChanged();
        } else {
          heartRateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public Builder setHeartRate(
          HeartRate.Builder builderForValue) {
        if (heartRateBuilder_ == null) {
          heartRate_ = builderForValue.build();
          onChanged();
        } else {
          heartRateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public Builder mergeHeartRate(HeartRate value) {
        if (heartRateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              heartRate_ != HeartRate.getDefaultInstance()) {
            heartRate_ =
              HeartRate.newBuilder(heartRate_).mergeFrom(value).buildPartial();
          } else {
            heartRate_ = value;
          }
          onChanged();
        } else {
          heartRateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public Builder clearHeartRate() {
        if (heartRateBuilder_ == null) {
          heartRate_ = HeartRate.getDefaultInstance();
          onChanged();
        } else {
          heartRateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public HeartRate.Builder getHeartRateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getHeartRateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      public HeartRateOrBuilder getHeartRateOrBuilder() {
        if (heartRateBuilder_ != null) {
          return heartRateBuilder_.getMessageOrBuilder();
        } else {
          return heartRate_;
        }
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.HeartRate heartRate = 4;</code>
       *
       * <pre>
       *Heart rate mesaurement record that may come in a telemetry record
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          HeartRate, HeartRate.Builder, HeartRateOrBuilder>
          getHeartRateFieldBuilder() {
        if (heartRateBuilder_ == null) {
          heartRateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              HeartRate, HeartRate.Builder, HeartRateOrBuilder>(
                  heartRate_,
                  getParentForChildren(),
                  isClean());
          heartRate_ = null;
        }
        return heartRateBuilder_;
      }

      // optional .com.nvbyte.kya.Telemetry.Survey survey = 5;
      private Survey survey_ = Survey.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Survey, Survey.Builder, SurveyOrBuilder> surveyBuilder_;
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public boolean hasSurvey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public Survey getSurvey() {
        if (surveyBuilder_ == null) {
          return survey_;
        } else {
          return surveyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public Builder setSurvey(Survey value) {
        if (surveyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          survey_ = value;
          onChanged();
        } else {
          surveyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public Builder setSurvey(
          Survey.Builder builderForValue) {
        if (surveyBuilder_ == null) {
          survey_ = builderForValue.build();
          onChanged();
        } else {
          surveyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public Builder mergeSurvey(Survey value) {
        if (surveyBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              survey_ != Survey.getDefaultInstance()) {
            survey_ =
              Survey.newBuilder(survey_).mergeFrom(value).buildPartial();
          } else {
            survey_ = value;
          }
          onChanged();
        } else {
          surveyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public Builder clearSurvey() {
        if (surveyBuilder_ == null) {
          survey_ = Survey.getDefaultInstance();
          onChanged();
        } else {
          surveyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public Survey.Builder getSurveyBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSurveyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      public SurveyOrBuilder getSurveyOrBuilder() {
        if (surveyBuilder_ != null) {
          return surveyBuilder_.getMessageOrBuilder();
        } else {
          return survey_;
        }
      }
      /**
       * <code>optional .com.nvbyte.kya.Telemetry.Survey survey = 5;</code>
       *
       * <pre>
       *Survey response record that may come in a telemetry record
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Survey, Survey.Builder, SurveyOrBuilder>
          getSurveyFieldBuilder() {
        if (surveyBuilder_ == null) {
          surveyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Survey, Survey.Builder, SurveyOrBuilder>(
                  survey_,
                  getParentForChildren(),
                  isClean());
          survey_ = null;
        }
        return surveyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.Telemetry)
    }

    static {
      defaultInstance = new Telemetry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.Telemetry)
  }

  public interface GeoPointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userID = 1;
    /**
     * <code>optional string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    boolean hasUserID();
    /**
     * <code>optional string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    String getUserID();
    /**
     * <code>optional string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIDBytes();

    // required double latitude = 2;
    /**
     * <code>required double latitude = 2;</code>
     *
     * <pre>
     * Latitude coordinate in physical space.
     * </pre>
     */
    boolean hasLatitude();
    /**
     * <code>required double latitude = 2;</code>
     *
     * <pre>
     * Latitude coordinate in physical space.
     * </pre>
     */
    double getLatitude();

    // required double longitude = 3;
    /**
     * <code>required double longitude = 3;</code>
     *
     * <pre>
     * Longitude coordinate in physical space.
     * </pre>
     */
    boolean hasLongitude();
    /**
     * <code>required double longitude = 3;</code>
     *
     * <pre>
     * Longitude coordinate in physical space.
     * </pre>
     */
    double getLongitude();
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.GeoPoint}
   *
   * <pre>
   * Contains a latitude and longitude that represents a location in space. 
   * </pre>
   */
  public static final class GeoPoint extends
      com.google.protobuf.GeneratedMessage
      implements GeoPointOrBuilder {
    // Use GeoPoint.newBuilder() to construct.
    private GeoPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GeoPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GeoPoint defaultInstance;
    public static GeoPoint getDefaultInstance() {
      return defaultInstance;
    }

    public GeoPoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GeoPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userID_ = input.readBytes();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              latitude_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              longitude_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_GeoPoint_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_GeoPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GeoPoint.class, Builder.class);
    }

    public static com.google.protobuf.Parser<GeoPoint> PARSER =
        new com.google.protobuf.AbstractParser<GeoPoint>() {
      public GeoPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GeoPoint(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GeoPoint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userID = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private Object userID_;
    /**
     * <code>optional string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    public boolean hasUserID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    public String getUserID() {
      Object ref = userID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userID = 1;</code>
     *
     * <pre>
     *Identifier of the device where the telemetry was captured
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIDBytes() {
      Object ref = userID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required double latitude = 2;
    public static final int LATITUDE_FIELD_NUMBER = 2;
    private double latitude_;
    /**
     * <code>required double latitude = 2;</code>
     *
     * <pre>
     * Latitude coordinate in physical space.
     * </pre>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double latitude = 2;</code>
     *
     * <pre>
     * Latitude coordinate in physical space.
     * </pre>
     */
    public double getLatitude() {
      return latitude_;
    }

    // required double longitude = 3;
    public static final int LONGITUDE_FIELD_NUMBER = 3;
    private double longitude_;
    /**
     * <code>required double longitude = 3;</code>
     *
     * <pre>
     * Longitude coordinate in physical space.
     * </pre>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double longitude = 3;</code>
     *
     * <pre>
     * Longitude coordinate in physical space.
     * </pre>
     */
    public double getLongitude() {
      return longitude_;
    }

    private void initFields() {
      userID_ = "";
      latitude_ = 0D;
      longitude_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLatitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLongitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, longitude_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, latitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, longitude_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static GeoPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GeoPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GeoPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GeoPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GeoPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GeoPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GeoPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GeoPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GeoPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GeoPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GeoPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.GeoPoint}
     *
     * <pre>
     * Contains a latitude and longitude that represents a location in space. 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GeoPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_GeoPoint_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_GeoPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GeoPoint.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.GeoPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_GeoPoint_descriptor;
      }

      public GeoPoint getDefaultInstanceForType() {
        return GeoPoint.getDefaultInstance();
      }

      public GeoPoint build() {
        GeoPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GeoPoint buildPartial() {
        GeoPoint result = new GeoPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userID_ = userID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.longitude_ = longitude_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GeoPoint) {
          return mergeFrom((GeoPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GeoPoint other) {
        if (other == GeoPoint.getDefaultInstance()) return this;
        if (other.hasUserID()) {
          bitField0_ |= 0x00000001;
          userID_ = other.userID_;
          onChanged();
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLatitude()) {
          
          return false;
        }
        if (!hasLongitude()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GeoPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GeoPoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userID = 1;
      private Object userID_ = "";
      /**
       * <code>optional string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public boolean hasUserID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public String getUserID() {
        Object ref = userID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIDBytes() {
        Object ref = userID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public Builder setUserID(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public Builder clearUserID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userID_ = getDefaultInstance().getUserID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userID = 1;</code>
       *
       * <pre>
       *Identifier of the device where the telemetry was captured
       * </pre>
       */
      public Builder setUserIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userID_ = value;
        onChanged();
        return this;
      }

      // required double latitude = 2;
      private double latitude_ ;
      /**
       * <code>required double latitude = 2;</code>
       *
       * <pre>
       * Latitude coordinate in physical space.
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double latitude = 2;</code>
       *
       * <pre>
       * Latitude coordinate in physical space.
       * </pre>
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <code>required double latitude = 2;</code>
       *
       * <pre>
       * Latitude coordinate in physical space.
       * </pre>
       */
      public Builder setLatitude(double value) {
        bitField0_ |= 0x00000002;
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double latitude = 2;</code>
       *
       * <pre>
       * Latitude coordinate in physical space.
       * </pre>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0D;
        onChanged();
        return this;
      }

      // required double longitude = 3;
      private double longitude_ ;
      /**
       * <code>required double longitude = 3;</code>
       *
       * <pre>
       * Longitude coordinate in physical space.
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double longitude = 3;</code>
       *
       * <pre>
       * Longitude coordinate in physical space.
       * </pre>
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <code>required double longitude = 3;</code>
       *
       * <pre>
       * Longitude coordinate in physical space.
       * </pre>
       */
      public Builder setLongitude(double value) {
        bitField0_ |= 0x00000004;
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double longitude = 3;</code>
       *
       * <pre>
       * Longitude coordinate in physical space.
       * </pre>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.GeoPoint)
    }

    static {
      defaultInstance = new GeoPoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.GeoPoint)
  }

  public interface CheckInOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     * Unique Id for the wearable device. This could either be registered or use
     * a particular serial value unique to the physical device.
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     * Unique Id for the wearable device. This could either be registered or use
     * a particular serial value unique to the physical device.
     * </pre>
     */
    String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     * Unique Id for the wearable device. This could either be registered or use
     * a particular serial value unique to the physical device.
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // required .com.nvbyte.kya.GeoPoint location = 2;
    /**
     * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
     *
     * <pre>
     * Location of wearable device at the time of checkin. This has two purposes
     * (1) to check for changes between areas that the user traverses and (2) to 
     * track user mobility for telemetry purposes.
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
     *
     * <pre>
     * Location of wearable device at the time of checkin. This has two purposes
     * (1) to check for changes between areas that the user traverses and (2) to 
     * track user mobility for telemetry purposes.
     * </pre>
     */
    GeoPoint getLocation();
    /**
     * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
     *
     * <pre>
     * Location of wearable device at the time of checkin. This has two purposes
     * (1) to check for changes between areas that the user traverses and (2) to 
     * track user mobility for telemetry purposes.
     * </pre>
     */
    GeoPointOrBuilder getLocationOrBuilder();

    // optional double speed = 3;
    /**
     * <code>optional double speed = 3;</code>
     *
     * <pre>
     * Speed at which user is moving. This can be used to determine the what is 
     * the most efficient request interval, along with the user distance from 
     * the closest risk zone increase.
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional double speed = 3;</code>
     *
     * <pre>
     * Speed at which user is moving. This can be used to determine the what is 
     * the most efficient request interval, along with the user distance from 
     * the closest risk zone increase.
     * </pre>
     */
    double getSpeed();

    // required bool negDelta = 4;
    /**
     * <code>required bool negDelta = 4;</code>
     *
     * <pre>
     * A flag to identify if the user is expecting notifications to be triggered
     * when he/she moves from a higer risk zone to a lower risk zone.
     * </pre>
     */
    boolean hasNegDelta();
    /**
     * <code>required bool negDelta = 4;</code>
     *
     * <pre>
     * A flag to identify if the user is expecting notifications to be triggered
     * when he/she moves from a higer risk zone to a lower risk zone.
     * </pre>
     */
    boolean getNegDelta();
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.CheckIn}
   *
   * <pre>
   * Message sent by the wear device to check in. This message is sent periodically
   * from the client device, to check if the wearable device has moved in a positive
   * risk gradient.
   * </pre>
   */
  public static final class CheckIn extends
      com.google.protobuf.GeneratedMessage
      implements CheckInOrBuilder {
    // Use CheckIn.newBuilder() to construct.
    private CheckIn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CheckIn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CheckIn defaultInstance;
    public static CheckIn getDefaultInstance() {
      return defaultInstance;
    }

    public CheckIn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CheckIn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              GeoPoint.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(GeoPoint.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              speed_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              negDelta_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_CheckIn_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_CheckIn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CheckIn.class, Builder.class);
    }

    public static com.google.protobuf.Parser<CheckIn> PARSER =
        new com.google.protobuf.AbstractParser<CheckIn>() {
      public CheckIn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CheckIn(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<CheckIn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     * Unique Id for the wearable device. This could either be registered or use
     * a particular serial value unique to the physical device.
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     * Unique Id for the wearable device. This could either be registered or use
     * a particular serial value unique to the physical device.
     * </pre>
     */
    public String getUserId() {
      Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     * Unique Id for the wearable device. This could either be registered or use
     * a particular serial value unique to the physical device.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .com.nvbyte.kya.GeoPoint location = 2;
    public static final int LOCATION_FIELD_NUMBER = 2;
    private GeoPoint location_;
    /**
     * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
     *
     * <pre>
     * Location of wearable device at the time of checkin. This has two purposes
     * (1) to check for changes between areas that the user traverses and (2) to 
     * track user mobility for telemetry purposes.
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
     *
     * <pre>
     * Location of wearable device at the time of checkin. This has two purposes
     * (1) to check for changes between areas that the user traverses and (2) to 
     * track user mobility for telemetry purposes.
     * </pre>
     */
    public GeoPoint getLocation() {
      return location_;
    }
    /**
     * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
     *
     * <pre>
     * Location of wearable device at the time of checkin. This has two purposes
     * (1) to check for changes between areas that the user traverses and (2) to 
     * track user mobility for telemetry purposes.
     * </pre>
     */
    public GeoPointOrBuilder getLocationOrBuilder() {
      return location_;
    }

    // optional double speed = 3;
    public static final int SPEED_FIELD_NUMBER = 3;
    private double speed_;
    /**
     * <code>optional double speed = 3;</code>
     *
     * <pre>
     * Speed at which user is moving. This can be used to determine the what is 
     * the most efficient request interval, along with the user distance from 
     * the closest risk zone increase.
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double speed = 3;</code>
     *
     * <pre>
     * Speed at which user is moving. This can be used to determine the what is 
     * the most efficient request interval, along with the user distance from 
     * the closest risk zone increase.
     * </pre>
     */
    public double getSpeed() {
      return speed_;
    }

    // required bool negDelta = 4;
    public static final int NEGDELTA_FIELD_NUMBER = 4;
    private boolean negDelta_;
    /**
     * <code>required bool negDelta = 4;</code>
     *
     * <pre>
     * A flag to identify if the user is expecting notifications to be triggered
     * when he/she moves from a higer risk zone to a lower risk zone.
     * </pre>
     */
    public boolean hasNegDelta() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool negDelta = 4;</code>
     *
     * <pre>
     * A flag to identify if the user is expecting notifications to be triggered
     * when he/she moves from a higer risk zone to a lower risk zone.
     * </pre>
     */
    public boolean getNegDelta() {
      return negDelta_;
    }

    private void initFields() {
      userId_ = "";
      location_ = GeoPoint.getDefaultInstance();
      speed_ = 0D;
      negDelta_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLocation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNegDelta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLocation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, speed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, negDelta_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, location_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, speed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, negDelta_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static CheckIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CheckIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CheckIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CheckIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CheckIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static CheckIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static CheckIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static CheckIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static CheckIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static CheckIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CheckIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.CheckIn}
     *
     * <pre>
     * Message sent by the wear device to check in. This message is sent periodically
     * from the client device, to check if the wearable device has moved in a positive
     * risk gradient.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CheckInOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_CheckIn_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_CheckIn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CheckIn.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.CheckIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (locationBuilder_ == null) {
          location_ = GeoPoint.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        speed_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        negDelta_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_CheckIn_descriptor;
      }

      public CheckIn getDefaultInstanceForType() {
        return CheckIn.getDefaultInstance();
      }

      public CheckIn build() {
        CheckIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CheckIn buildPartial() {
        CheckIn result = new CheckIn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.negDelta_ = negDelta_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CheckIn) {
          return mergeFrom((CheckIn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CheckIn other) {
        if (other == CheckIn.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasNegDelta()) {
          setNegDelta(other.getNegDelta());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasLocation()) {
          
          return false;
        }
        if (!hasNegDelta()) {
          
          return false;
        }
        if (!getLocation().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CheckIn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CheckIn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       * Unique Id for the wearable device. This could either be registered or use
       * a particular serial value unique to the physical device.
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       * Unique Id for the wearable device. This could either be registered or use
       * a particular serial value unique to the physical device.
       * </pre>
       */
      public String getUserId() {
        Object ref = userId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       * Unique Id for the wearable device. This could either be registered or use
       * a particular serial value unique to the physical device.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       * Unique Id for the wearable device. This could either be registered or use
       * a particular serial value unique to the physical device.
       * </pre>
       */
      public Builder setUserId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       * Unique Id for the wearable device. This could either be registered or use
       * a particular serial value unique to the physical device.
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       * Unique Id for the wearable device. This could either be registered or use
       * a particular serial value unique to the physical device.
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // required .com.nvbyte.kya.GeoPoint location = 2;
      private GeoPoint location_ = GeoPoint.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          GeoPoint, GeoPoint.Builder, GeoPointOrBuilder> locationBuilder_;
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public GeoPoint getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public Builder setLocation(GeoPoint value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public Builder setLocation(
          GeoPoint.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public Builder mergeLocation(GeoPoint value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              location_ != GeoPoint.getDefaultInstance()) {
            location_ =
              GeoPoint.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = GeoPoint.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public GeoPoint.Builder getLocationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      public GeoPointOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>required .com.nvbyte.kya.GeoPoint location = 2;</code>
       *
       * <pre>
       * Location of wearable device at the time of checkin. This has two purposes
       * (1) to check for changes between areas that the user traverses and (2) to 
       * track user mobility for telemetry purposes.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          GeoPoint, GeoPoint.Builder, GeoPointOrBuilder>
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GeoPoint, GeoPoint.Builder, GeoPointOrBuilder>(
                  location_,
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // optional double speed = 3;
      private double speed_ ;
      /**
       * <code>optional double speed = 3;</code>
       *
       * <pre>
       * Speed at which user is moving. This can be used to determine the what is 
       * the most efficient request interval, along with the user distance from 
       * the closest risk zone increase.
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double speed = 3;</code>
       *
       * <pre>
       * Speed at which user is moving. This can be used to determine the what is 
       * the most efficient request interval, along with the user distance from 
       * the closest risk zone increase.
       * </pre>
       */
      public double getSpeed() {
        return speed_;
      }
      /**
       * <code>optional double speed = 3;</code>
       *
       * <pre>
       * Speed at which user is moving. This can be used to determine the what is 
       * the most efficient request interval, along with the user distance from 
       * the closest risk zone increase.
       * </pre>
       */
      public Builder setSpeed(double value) {
        bitField0_ |= 0x00000004;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double speed = 3;</code>
       *
       * <pre>
       * Speed at which user is moving. This can be used to determine the what is 
       * the most efficient request interval, along with the user distance from 
       * the closest risk zone increase.
       * </pre>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        speed_ = 0D;
        onChanged();
        return this;
      }

      // required bool negDelta = 4;
      private boolean negDelta_ ;
      /**
       * <code>required bool negDelta = 4;</code>
       *
       * <pre>
       * A flag to identify if the user is expecting notifications to be triggered
       * when he/she moves from a higer risk zone to a lower risk zone.
       * </pre>
       */
      public boolean hasNegDelta() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool negDelta = 4;</code>
       *
       * <pre>
       * A flag to identify if the user is expecting notifications to be triggered
       * when he/she moves from a higer risk zone to a lower risk zone.
       * </pre>
       */
      public boolean getNegDelta() {
        return negDelta_;
      }
      /**
       * <code>required bool negDelta = 4;</code>
       *
       * <pre>
       * A flag to identify if the user is expecting notifications to be triggered
       * when he/she moves from a higer risk zone to a lower risk zone.
       * </pre>
       */
      public Builder setNegDelta(boolean value) {
        bitField0_ |= 0x00000008;
        negDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool negDelta = 4;</code>
       *
       * <pre>
       * A flag to identify if the user is expecting notifications to be triggered
       * when he/she moves from a higer risk zone to a lower risk zone.
       * </pre>
       */
      public Builder clearNegDelta() {
        bitField0_ = (bitField0_ & ~0x00000008);
        negDelta_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.CheckIn)
    }

    static {
      defaultInstance = new CheckIn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.CheckIn)
  }

  public interface GeoZoneOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 level = 1;
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * Risk zone classification for this particular area. This number will be
     * between 1 and 10. 
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * Risk zone classification for this particular area. This number will be
     * between 1 and 10. 
     * </pre>
     */
    int getLevel();

    // required int32 totalCrime = 2;
    /**
     * <code>required int32 totalCrime = 2;</code>
     *
     * <pre>
     * Crime level for this particular GeoZone, for statistical purposes. This
     * information can be included as part of info in admin dashboard detail.
     * </pre>
     */
    boolean hasTotalCrime();
    /**
     * <code>required int32 totalCrime = 2;</code>
     *
     * <pre>
     * Crime level for this particular GeoZone, for statistical purposes. This
     * information can be included as part of info in admin dashboard detail.
     * </pre>
     */
    int getTotalCrime();

    // optional string updated = 3;
    /**
     * <code>optional string updated = 3;</code>
     *
     * <pre>
     * Date of last update.
     * </pre>
     */
    boolean hasUpdated();
    /**
     * <code>optional string updated = 3;</code>
     *
     * <pre>
     * Date of last update.
     * </pre>
     */
    String getUpdated();
    /**
     * <code>optional string updated = 3;</code>
     *
     * <pre>
     * Date of last update.
     * </pre>
     */
    com.google.protobuf.ByteString
        getUpdatedBytes();

    // required int32 zoneID = 4;
    /**
     * <code>required int32 zoneID = 4;</code>
     */
    boolean hasZoneID();
    /**
     * <code>required int32 zoneID = 4;</code>
     */
    int getZoneID();

    // repeated .com.nvbyte.kya.GeoPoint boundaries = 5;
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    java.util.List<GeoPoint>
        getBoundariesList();
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    GeoPoint getBoundaries(int index);
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    int getBoundariesCount();
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    java.util.List<? extends GeoPointOrBuilder>
        getBoundariesOrBuilderList();
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    GeoPointOrBuilder getBoundariesOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.GeoZone}
   *
   * <pre>
   * A zone classified with a specific risk level. The KYA Geozone representation
   * uses grid thematic mapping. Therefore, our Geozone will be defined by four 
   * GeoPoints.
   * </pre>
   */
  public static final class GeoZone extends
      com.google.protobuf.GeneratedMessage
      implements GeoZoneOrBuilder {
    // Use GeoZone.newBuilder() to construct.
    private GeoZone(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GeoZone(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GeoZone defaultInstance;
    public static GeoZone getDefaultInstance() {
      return defaultInstance;
    }

    public GeoZone getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GeoZone(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              level_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              totalCrime_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              updated_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              zoneID_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                boundaries_ = new java.util.ArrayList<GeoPoint>();
                mutable_bitField0_ |= 0x00000010;
              }
              boundaries_.add(input.readMessage(GeoPoint.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          boundaries_ = java.util.Collections.unmodifiableList(boundaries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_GeoZone_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_GeoZone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GeoZone.class, Builder.class);
    }

    public static com.google.protobuf.Parser<GeoZone> PARSER =
        new com.google.protobuf.AbstractParser<GeoZone>() {
      public GeoZone parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GeoZone(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GeoZone> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 level = 1;
    public static final int LEVEL_FIELD_NUMBER = 1;
    private int level_;
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * Risk zone classification for this particular area. This number will be
     * between 1 and 10. 
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 level = 1;</code>
     *
     * <pre>
     * Risk zone classification for this particular area. This number will be
     * between 1 and 10. 
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    // required int32 totalCrime = 2;
    public static final int TOTALCRIME_FIELD_NUMBER = 2;
    private int totalCrime_;
    /**
     * <code>required int32 totalCrime = 2;</code>
     *
     * <pre>
     * Crime level for this particular GeoZone, for statistical purposes. This
     * information can be included as part of info in admin dashboard detail.
     * </pre>
     */
    public boolean hasTotalCrime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 totalCrime = 2;</code>
     *
     * <pre>
     * Crime level for this particular GeoZone, for statistical purposes. This
     * information can be included as part of info in admin dashboard detail.
     * </pre>
     */
    public int getTotalCrime() {
      return totalCrime_;
    }

    // optional string updated = 3;
    public static final int UPDATED_FIELD_NUMBER = 3;
    private Object updated_;
    /**
     * <code>optional string updated = 3;</code>
     *
     * <pre>
     * Date of last update.
     * </pre>
     */
    public boolean hasUpdated() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string updated = 3;</code>
     *
     * <pre>
     * Date of last update.
     * </pre>
     */
    public String getUpdated() {
      Object ref = updated_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          updated_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string updated = 3;</code>
     *
     * <pre>
     * Date of last update.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUpdatedBytes() {
      Object ref = updated_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        updated_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 zoneID = 4;
    public static final int ZONEID_FIELD_NUMBER = 4;
    private int zoneID_;
    /**
     * <code>required int32 zoneID = 4;</code>
     */
    public boolean hasZoneID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 zoneID = 4;</code>
     */
    public int getZoneID() {
      return zoneID_;
    }

    // repeated .com.nvbyte.kya.GeoPoint boundaries = 5;
    public static final int BOUNDARIES_FIELD_NUMBER = 5;
    private java.util.List<GeoPoint> boundaries_;
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    public java.util.List<GeoPoint> getBoundariesList() {
      return boundaries_;
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    public java.util.List<? extends GeoPointOrBuilder>
        getBoundariesOrBuilderList() {
      return boundaries_;
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    public int getBoundariesCount() {
      return boundaries_.size();
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    public GeoPoint getBoundaries(int index) {
      return boundaries_.get(index);
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
     *
     * <pre>
     * Boundaries of the classified zone. This will always contain exactly 
     * four GeoPoints.
     * </pre>
     */
    public GeoPointOrBuilder getBoundariesOrBuilder(
        int index) {
      return boundaries_.get(index);
    }

    private void initFields() {
      level_ = 0;
      totalCrime_ = 0;
      updated_ = "";
      zoneID_ = 0;
      boundaries_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalCrime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZoneID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBoundariesCount(); i++) {
        if (!getBoundaries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, totalCrime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUpdatedBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, zoneID_);
      }
      for (int i = 0; i < boundaries_.size(); i++) {
        output.writeMessage(5, boundaries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, level_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, totalCrime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUpdatedBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, zoneID_);
      }
      for (int i = 0; i < boundaries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, boundaries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static GeoZone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GeoZone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GeoZone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GeoZone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GeoZone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GeoZone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GeoZone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GeoZone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GeoZone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GeoZone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GeoZone prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.GeoZone}
     *
     * <pre>
     * A zone classified with a specific risk level. The KYA Geozone representation
     * uses grid thematic mapping. Therefore, our Geozone will be defined by four 
     * GeoPoints.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GeoZoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_GeoZone_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_GeoZone_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GeoZone.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.GeoZone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoundariesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        totalCrime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        updated_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        zoneID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (boundariesBuilder_ == null) {
          boundaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          boundariesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_GeoZone_descriptor;
      }

      public GeoZone getDefaultInstanceForType() {
        return GeoZone.getDefaultInstance();
      }

      public GeoZone build() {
        GeoZone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GeoZone buildPartial() {
        GeoZone result = new GeoZone(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.totalCrime_ = totalCrime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.updated_ = updated_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.zoneID_ = zoneID_;
        if (boundariesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            boundaries_ = java.util.Collections.unmodifiableList(boundaries_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.boundaries_ = boundaries_;
        } else {
          result.boundaries_ = boundariesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GeoZone) {
          return mergeFrom((GeoZone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GeoZone other) {
        if (other == GeoZone.getDefaultInstance()) return this;
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasTotalCrime()) {
          setTotalCrime(other.getTotalCrime());
        }
        if (other.hasUpdated()) {
          bitField0_ |= 0x00000004;
          updated_ = other.updated_;
          onChanged();
        }
        if (other.hasZoneID()) {
          setZoneID(other.getZoneID());
        }
        if (boundariesBuilder_ == null) {
          if (!other.boundaries_.isEmpty()) {
            if (boundaries_.isEmpty()) {
              boundaries_ = other.boundaries_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBoundariesIsMutable();
              boundaries_.addAll(other.boundaries_);
            }
            onChanged();
          }
        } else {
          if (!other.boundaries_.isEmpty()) {
            if (boundariesBuilder_.isEmpty()) {
              boundariesBuilder_.dispose();
              boundariesBuilder_ = null;
              boundaries_ = other.boundaries_;
              bitField0_ = (bitField0_ & ~0x00000010);
              boundariesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoundariesFieldBuilder() : null;
            } else {
              boundariesBuilder_.addAllMessages(other.boundaries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasTotalCrime()) {
          
          return false;
        }
        if (!hasZoneID()) {
          
          return false;
        }
        for (int i = 0; i < getBoundariesCount(); i++) {
          if (!getBoundaries(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GeoZone parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GeoZone) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 level = 1;
      private int level_ ;
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * Risk zone classification for this particular area. This number will be
       * between 1 and 10. 
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * Risk zone classification for this particular area. This number will be
       * between 1 and 10. 
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * Risk zone classification for this particular area. This number will be
       * between 1 and 10. 
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000001;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 level = 1;</code>
       *
       * <pre>
       * Risk zone classification for this particular area. This number will be
       * between 1 and 10. 
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        onChanged();
        return this;
      }

      // required int32 totalCrime = 2;
      private int totalCrime_ ;
      /**
       * <code>required int32 totalCrime = 2;</code>
       *
       * <pre>
       * Crime level for this particular GeoZone, for statistical purposes. This
       * information can be included as part of info in admin dashboard detail.
       * </pre>
       */
      public boolean hasTotalCrime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 totalCrime = 2;</code>
       *
       * <pre>
       * Crime level for this particular GeoZone, for statistical purposes. This
       * information can be included as part of info in admin dashboard detail.
       * </pre>
       */
      public int getTotalCrime() {
        return totalCrime_;
      }
      /**
       * <code>required int32 totalCrime = 2;</code>
       *
       * <pre>
       * Crime level for this particular GeoZone, for statistical purposes. This
       * information can be included as part of info in admin dashboard detail.
       * </pre>
       */
      public Builder setTotalCrime(int value) {
        bitField0_ |= 0x00000002;
        totalCrime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 totalCrime = 2;</code>
       *
       * <pre>
       * Crime level for this particular GeoZone, for statistical purposes. This
       * information can be included as part of info in admin dashboard detail.
       * </pre>
       */
      public Builder clearTotalCrime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalCrime_ = 0;
        onChanged();
        return this;
      }

      // optional string updated = 3;
      private Object updated_ = "";
      /**
       * <code>optional string updated = 3;</code>
       *
       * <pre>
       * Date of last update.
       * </pre>
       */
      public boolean hasUpdated() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string updated = 3;</code>
       *
       * <pre>
       * Date of last update.
       * </pre>
       */
      public String getUpdated() {
        Object ref = updated_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          updated_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string updated = 3;</code>
       *
       * <pre>
       * Date of last update.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUpdatedBytes() {
        Object ref = updated_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          updated_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string updated = 3;</code>
       *
       * <pre>
       * Date of last update.
       * </pre>
       */
      public Builder setUpdated(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        updated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string updated = 3;</code>
       *
       * <pre>
       * Date of last update.
       * </pre>
       */
      public Builder clearUpdated() {
        bitField0_ = (bitField0_ & ~0x00000004);
        updated_ = getDefaultInstance().getUpdated();
        onChanged();
        return this;
      }
      /**
       * <code>optional string updated = 3;</code>
       *
       * <pre>
       * Date of last update.
       * </pre>
       */
      public Builder setUpdatedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        updated_ = value;
        onChanged();
        return this;
      }

      // required int32 zoneID = 4;
      private int zoneID_ ;
      /**
       * <code>required int32 zoneID = 4;</code>
       */
      public boolean hasZoneID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 zoneID = 4;</code>
       */
      public int getZoneID() {
        return zoneID_;
      }
      /**
       * <code>required int32 zoneID = 4;</code>
       */
      public Builder setZoneID(int value) {
        bitField0_ |= 0x00000008;
        zoneID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 zoneID = 4;</code>
       */
      public Builder clearZoneID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        zoneID_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.nvbyte.kya.GeoPoint boundaries = 5;
      private java.util.List<GeoPoint> boundaries_ =
        java.util.Collections.emptyList();
      private void ensureBoundariesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          boundaries_ = new java.util.ArrayList<GeoPoint>(boundaries_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          GeoPoint, GeoPoint.Builder, GeoPointOrBuilder> boundariesBuilder_;

      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public java.util.List<GeoPoint> getBoundariesList() {
        if (boundariesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boundaries_);
        } else {
          return boundariesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public int getBoundariesCount() {
        if (boundariesBuilder_ == null) {
          return boundaries_.size();
        } else {
          return boundariesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public GeoPoint getBoundaries(int index) {
        if (boundariesBuilder_ == null) {
          return boundaries_.get(index);
        } else {
          return boundariesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder setBoundaries(
          int index, GeoPoint value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundariesIsMutable();
          boundaries_.set(index, value);
          onChanged();
        } else {
          boundariesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder setBoundaries(
          int index, GeoPoint.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.set(index, builderForValue.build());
          onChanged();
        } else {
          boundariesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder addBoundaries(GeoPoint value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundariesIsMutable();
          boundaries_.add(value);
          onChanged();
        } else {
          boundariesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder addBoundaries(
          int index, GeoPoint value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundariesIsMutable();
          boundaries_.add(index, value);
          onChanged();
        } else {
          boundariesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder addBoundaries(
          GeoPoint.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.add(builderForValue.build());
          onChanged();
        } else {
          boundariesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder addBoundaries(
          int index, GeoPoint.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.add(index, builderForValue.build());
          onChanged();
        } else {
          boundariesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder addAllBoundaries(
          Iterable<? extends GeoPoint> values) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          super.addAll(values, boundaries_);
          onChanged();
        } else {
          boundariesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder clearBoundaries() {
        if (boundariesBuilder_ == null) {
          boundaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          boundariesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public Builder removeBoundaries(int index) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.remove(index);
          onChanged();
        } else {
          boundariesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public GeoPoint.Builder getBoundariesBuilder(
          int index) {
        return getBoundariesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public GeoPointOrBuilder getBoundariesOrBuilder(
          int index) {
        if (boundariesBuilder_ == null) {
          return boundaries_.get(index);  } else {
          return boundariesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public java.util.List<? extends GeoPointOrBuilder>
           getBoundariesOrBuilderList() {
        if (boundariesBuilder_ != null) {
          return boundariesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boundaries_);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public GeoPoint.Builder addBoundariesBuilder() {
        return getBoundariesFieldBuilder().addBuilder(
            GeoPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public GeoPoint.Builder addBoundariesBuilder(
          int index) {
        return getBoundariesFieldBuilder().addBuilder(
            index, GeoPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 5;</code>
       *
       * <pre>
       * Boundaries of the classified zone. This will always contain exactly 
       * four GeoPoints.
       * </pre>
       */
      public java.util.List<GeoPoint.Builder>
           getBoundariesBuilderList() {
        return getBoundariesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          GeoPoint, GeoPoint.Builder, GeoPointOrBuilder>
          getBoundariesFieldBuilder() {
        if (boundariesBuilder_ == null) {
          boundariesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              GeoPoint, GeoPoint.Builder, GeoPointOrBuilder>(
                  boundaries_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          boundaries_ = null;
        }
        return boundariesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.GeoZone)
    }

    static {
      defaultInstance = new GeoZone(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.GeoZone)
  }

  public interface GridOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.nvbyte.kya.GeoZone tiles = 1;
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    java.util.List<GeoZone>
        getTilesList();
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    GeoZone getTiles(int index);
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    int getTilesCount();
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    java.util.List<? extends GeoZoneOrBuilder>
        getTilesOrBuilderList();
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    GeoZoneOrBuilder getTilesOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.Grid}
   *
   * <pre>
   * Grid of zones requested by the admin dashboard. This grid should contain 
   * all the risk areas for a subset of the area of study. Message will be a 
   * list of geozones that can be mapped to Google Map API.
   * </pre>
   */
  public static final class Grid extends
      com.google.protobuf.GeneratedMessage
      implements GridOrBuilder {
    // Use Grid.newBuilder() to construct.
    private Grid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Grid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Grid defaultInstance;
    public static Grid getDefaultInstance() {
      return defaultInstance;
    }

    public Grid getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Grid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tiles_ = new java.util.ArrayList<GeoZone>();
                mutable_bitField0_ |= 0x00000001;
              }
              tiles_.add(input.readMessage(GeoZone.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tiles_ = java.util.Collections.unmodifiableList(tiles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_Grid_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_Grid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Grid.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Grid> PARSER =
        new com.google.protobuf.AbstractParser<Grid>() {
      public Grid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Grid(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Grid> getParserForType() {
      return PARSER;
    }

    // repeated .com.nvbyte.kya.GeoZone tiles = 1;
    public static final int TILES_FIELD_NUMBER = 1;
    private java.util.List<GeoZone> tiles_;
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    public java.util.List<GeoZone> getTilesList() {
      return tiles_;
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    public java.util.List<? extends GeoZoneOrBuilder>
        getTilesOrBuilderList() {
      return tiles_;
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    public int getTilesCount() {
      return tiles_.size();
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    public GeoZone getTiles(int index) {
      return tiles_.get(index);
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
     *
     * <pre>
     * List of geozones in the area currently visualized.
     * </pre>
     */
    public GeoZoneOrBuilder getTilesOrBuilder(
        int index) {
      return tiles_.get(index);
    }

    private void initFields() {
      tiles_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getTilesCount(); i++) {
        if (!getTiles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tiles_.size(); i++) {
        output.writeMessage(1, tiles_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tiles_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Grid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Grid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Grid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Grid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Grid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Grid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Grid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Grid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Grid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Grid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Grid prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.Grid}
     *
     * <pre>
     * Grid of zones requested by the admin dashboard. This grid should contain 
     * all the risk areas for a subset of the area of study. Message will be a 
     * list of geozones that can be mapped to Google Map API.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GridOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_Grid_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_Grid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Grid.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.Grid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTilesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (tilesBuilder_ == null) {
          tiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tilesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_Grid_descriptor;
      }

      public Grid getDefaultInstanceForType() {
        return Grid.getDefaultInstance();
      }

      public Grid build() {
        Grid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Grid buildPartial() {
        Grid result = new Grid(this);
        int from_bitField0_ = bitField0_;
        if (tilesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            tiles_ = java.util.Collections.unmodifiableList(tiles_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tiles_ = tiles_;
        } else {
          result.tiles_ = tilesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Grid) {
          return mergeFrom((Grid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Grid other) {
        if (other == Grid.getDefaultInstance()) return this;
        if (tilesBuilder_ == null) {
          if (!other.tiles_.isEmpty()) {
            if (tiles_.isEmpty()) {
              tiles_ = other.tiles_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTilesIsMutable();
              tiles_.addAll(other.tiles_);
            }
            onChanged();
          }
        } else {
          if (!other.tiles_.isEmpty()) {
            if (tilesBuilder_.isEmpty()) {
              tilesBuilder_.dispose();
              tilesBuilder_ = null;
              tiles_ = other.tiles_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tilesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTilesFieldBuilder() : null;
            } else {
              tilesBuilder_.addAllMessages(other.tiles_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTilesCount(); i++) {
          if (!getTiles(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Grid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Grid) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.nvbyte.kya.GeoZone tiles = 1;
      private java.util.List<GeoZone> tiles_ =
        java.util.Collections.emptyList();
      private void ensureTilesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tiles_ = new java.util.ArrayList<GeoZone>(tiles_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          GeoZone, GeoZone.Builder, GeoZoneOrBuilder> tilesBuilder_;

      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public java.util.List<GeoZone> getTilesList() {
        if (tilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tiles_);
        } else {
          return tilesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public int getTilesCount() {
        if (tilesBuilder_ == null) {
          return tiles_.size();
        } else {
          return tilesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public GeoZone getTiles(int index) {
        if (tilesBuilder_ == null) {
          return tiles_.get(index);
        } else {
          return tilesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder setTiles(
          int index, GeoZone value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.set(index, value);
          onChanged();
        } else {
          tilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder setTiles(
          int index, GeoZone.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder addTiles(GeoZone value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.add(value);
          onChanged();
        } else {
          tilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder addTiles(
          int index, GeoZone value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.add(index, value);
          onChanged();
        } else {
          tilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder addTiles(
          GeoZone.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.add(builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder addTiles(
          int index, GeoZone.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder addAllTiles(
          Iterable<? extends GeoZone> values) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          super.addAll(values, tiles_);
          onChanged();
        } else {
          tilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder clearTiles() {
        if (tilesBuilder_ == null) {
          tiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public Builder removeTiles(int index) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.remove(index);
          onChanged();
        } else {
          tilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public GeoZone.Builder getTilesBuilder(
          int index) {
        return getTilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public GeoZoneOrBuilder getTilesOrBuilder(
          int index) {
        if (tilesBuilder_ == null) {
          return tiles_.get(index);  } else {
          return tilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public java.util.List<? extends GeoZoneOrBuilder>
           getTilesOrBuilderList() {
        if (tilesBuilder_ != null) {
          return tilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tiles_);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public GeoZone.Builder addTilesBuilder() {
        return getTilesFieldBuilder().addBuilder(
            GeoZone.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public GeoZone.Builder addTilesBuilder(
          int index) {
        return getTilesFieldBuilder().addBuilder(
            index, GeoZone.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoZone tiles = 1;</code>
       *
       * <pre>
       * List of geozones in the area currently visualized.
       * </pre>
       */
      public java.util.List<GeoZone.Builder>
           getTilesBuilderList() {
        return getTilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          GeoZone, GeoZone.Builder, GeoZoneOrBuilder>
          getTilesFieldBuilder() {
        if (tilesBuilder_ == null) {
          tilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              GeoZone, GeoZone.Builder, GeoZoneOrBuilder>(
                  tiles_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          tiles_ = null;
        }
        return tilesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.Grid)
    }

    static {
      defaultInstance = new Grid(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.Grid)
  }

  public interface GridBoundsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.nvbyte.kya.GeoPoint boundaries = 1;
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    java.util.List<GeoPoint>
        getBoundariesList();
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    GeoPoint getBoundaries(int index);
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    int getBoundariesCount();
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    java.util.List<? extends GeoPointOrBuilder>
        getBoundariesOrBuilderList();
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    GeoPointOrBuilder getBoundariesOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.GridBounds}
   *
   * <pre>
   * Contains the bounds of a grid
   * </pre>
   */
  public static final class GridBounds extends
      com.google.protobuf.GeneratedMessage
      implements GridBoundsOrBuilder {
    // Use GridBounds.newBuilder() to construct.
    private GridBounds(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GridBounds(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GridBounds defaultInstance;
    public static GridBounds getDefaultInstance() {
      return defaultInstance;
    }

    public GridBounds getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GridBounds(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                boundaries_ = new java.util.ArrayList<GeoPoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              boundaries_.add(input.readMessage(GeoPoint.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          boundaries_ = java.util.Collections.unmodifiableList(boundaries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_GridBounds_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_GridBounds_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GridBounds.class, Builder.class);
    }

    public static com.google.protobuf.Parser<GridBounds> PARSER =
        new com.google.protobuf.AbstractParser<GridBounds>() {
      public GridBounds parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GridBounds(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<GridBounds> getParserForType() {
      return PARSER;
    }

    // repeated .com.nvbyte.kya.GeoPoint boundaries = 1;
    public static final int BOUNDARIES_FIELD_NUMBER = 1;
    private java.util.List<GeoPoint> boundaries_;
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    public java.util.List<GeoPoint> getBoundariesList() {
      return boundaries_;
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    public java.util.List<? extends GeoPointOrBuilder>
        getBoundariesOrBuilderList() {
      return boundaries_;
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    public int getBoundariesCount() {
      return boundaries_.size();
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    public GeoPoint getBoundaries(int index) {
      return boundaries_.get(index);
    }
    /**
     * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
     *
     * <pre>
     * LatLng of the north-west corner
     * </pre>
     */
    public GeoPointOrBuilder getBoundariesOrBuilder(
        int index) {
      return boundaries_.get(index);
    }

    private void initFields() {
      boundaries_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getBoundariesCount(); i++) {
        if (!getBoundaries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < boundaries_.size(); i++) {
        output.writeMessage(1, boundaries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < boundaries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, boundaries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static GridBounds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GridBounds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GridBounds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GridBounds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GridBounds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GridBounds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GridBounds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GridBounds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GridBounds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GridBounds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(GridBounds prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.GridBounds}
     *
     * <pre>
     * Contains the bounds of a grid
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements GridBoundsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_GridBounds_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_GridBounds_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GridBounds.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.GridBounds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoundariesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (boundariesBuilder_ == null) {
          boundaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          boundariesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_GridBounds_descriptor;
      }

      public GridBounds getDefaultInstanceForType() {
        return GridBounds.getDefaultInstance();
      }

      public GridBounds build() {
        GridBounds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GridBounds buildPartial() {
        GridBounds result = new GridBounds(this);
        int from_bitField0_ = bitField0_;
        if (boundariesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            boundaries_ = java.util.Collections.unmodifiableList(boundaries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.boundaries_ = boundaries_;
        } else {
          result.boundaries_ = boundariesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GridBounds) {
          return mergeFrom((GridBounds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GridBounds other) {
        if (other == GridBounds.getDefaultInstance()) return this;
        if (boundariesBuilder_ == null) {
          if (!other.boundaries_.isEmpty()) {
            if (boundaries_.isEmpty()) {
              boundaries_ = other.boundaries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBoundariesIsMutable();
              boundaries_.addAll(other.boundaries_);
            }
            onChanged();
          }
        } else {
          if (!other.boundaries_.isEmpty()) {
            if (boundariesBuilder_.isEmpty()) {
              boundariesBuilder_.dispose();
              boundariesBuilder_ = null;
              boundaries_ = other.boundaries_;
              bitField0_ = (bitField0_ & ~0x00000001);
              boundariesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoundariesFieldBuilder() : null;
            } else {
              boundariesBuilder_.addAllMessages(other.boundaries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getBoundariesCount(); i++) {
          if (!getBoundaries(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GridBounds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GridBounds) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.nvbyte.kya.GeoPoint boundaries = 1;
      private java.util.List<GeoPoint> boundaries_ =
        java.util.Collections.emptyList();
      private void ensureBoundariesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          boundaries_ = new java.util.ArrayList<GeoPoint>(boundaries_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          GeoPoint, GeoPoint.Builder, GeoPointOrBuilder> boundariesBuilder_;

      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public java.util.List<GeoPoint> getBoundariesList() {
        if (boundariesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boundaries_);
        } else {
          return boundariesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public int getBoundariesCount() {
        if (boundariesBuilder_ == null) {
          return boundaries_.size();
        } else {
          return boundariesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public GeoPoint getBoundaries(int index) {
        if (boundariesBuilder_ == null) {
          return boundaries_.get(index);
        } else {
          return boundariesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder setBoundaries(
          int index, GeoPoint value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundariesIsMutable();
          boundaries_.set(index, value);
          onChanged();
        } else {
          boundariesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder setBoundaries(
          int index, GeoPoint.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.set(index, builderForValue.build());
          onChanged();
        } else {
          boundariesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder addBoundaries(GeoPoint value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundariesIsMutable();
          boundaries_.add(value);
          onChanged();
        } else {
          boundariesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder addBoundaries(
          int index, GeoPoint value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoundariesIsMutable();
          boundaries_.add(index, value);
          onChanged();
        } else {
          boundariesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder addBoundaries(
          GeoPoint.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.add(builderForValue.build());
          onChanged();
        } else {
          boundariesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder addBoundaries(
          int index, GeoPoint.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.add(index, builderForValue.build());
          onChanged();
        } else {
          boundariesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder addAllBoundaries(
          Iterable<? extends GeoPoint> values) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          super.addAll(values, boundaries_);
          onChanged();
        } else {
          boundariesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder clearBoundaries() {
        if (boundariesBuilder_ == null) {
          boundaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          boundariesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public Builder removeBoundaries(int index) {
        if (boundariesBuilder_ == null) {
          ensureBoundariesIsMutable();
          boundaries_.remove(index);
          onChanged();
        } else {
          boundariesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public GeoPoint.Builder getBoundariesBuilder(
          int index) {
        return getBoundariesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public GeoPointOrBuilder getBoundariesOrBuilder(
          int index) {
        if (boundariesBuilder_ == null) {
          return boundaries_.get(index);  } else {
          return boundariesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public java.util.List<? extends GeoPointOrBuilder>
           getBoundariesOrBuilderList() {
        if (boundariesBuilder_ != null) {
          return boundariesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boundaries_);
        }
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public GeoPoint.Builder addBoundariesBuilder() {
        return getBoundariesFieldBuilder().addBuilder(
            GeoPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public GeoPoint.Builder addBoundariesBuilder(
          int index) {
        return getBoundariesFieldBuilder().addBuilder(
            index, GeoPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .com.nvbyte.kya.GeoPoint boundaries = 1;</code>
       *
       * <pre>
       * LatLng of the north-west corner
       * </pre>
       */
      public java.util.List<GeoPoint.Builder>
           getBoundariesBuilderList() {
        return getBoundariesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          GeoPoint, GeoPoint.Builder, GeoPointOrBuilder>
          getBoundariesFieldBuilder() {
        if (boundariesBuilder_ == null) {
          boundariesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              GeoPoint, GeoPoint.Builder, GeoPointOrBuilder>(
                  boundaries_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          boundaries_ = null;
        }
        return boundariesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.GridBounds)
    }

    static {
      defaultInstance = new GridBounds(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.GridBounds)
  }

  public interface StatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required double maxNumOfCrimes = 1;
    /**
     * <code>required double maxNumOfCrimes = 1;</code>
     */
    boolean hasMaxNumOfCrimes();
    /**
     * <code>required double maxNumOfCrimes = 1;</code>
     */
    double getMaxNumOfCrimes();

    // required double minNumOfCrimes = 2;
    /**
     * <code>required double minNumOfCrimes = 2;</code>
     */
    boolean hasMinNumOfCrimes();
    /**
     * <code>required double minNumOfCrimes = 2;</code>
     */
    double getMinNumOfCrimes();

    // required double crimeAverage = 3;
    /**
     * <code>required double crimeAverage = 3;</code>
     */
    boolean hasCrimeAverage();
    /**
     * <code>required double crimeAverage = 3;</code>
     */
    double getCrimeAverage();
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.Stats}
   *
   * <pre>
   * Stats
   * </pre>
   */
  public static final class Stats extends
      com.google.protobuf.GeneratedMessage
      implements StatsOrBuilder {
    // Use Stats.newBuilder() to construct.
    private Stats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Stats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Stats defaultInstance;
    public static Stats getDefaultInstance() {
      return defaultInstance;
    }

    public Stats getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Stats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              maxNumOfCrimes_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              minNumOfCrimes_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              crimeAverage_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_Stats_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_Stats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Stats.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Stats> PARSER =
        new com.google.protobuf.AbstractParser<Stats>() {
      public Stats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Stats(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Stats> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double maxNumOfCrimes = 1;
    public static final int MAXNUMOFCRIMES_FIELD_NUMBER = 1;
    private double maxNumOfCrimes_;
    /**
     * <code>required double maxNumOfCrimes = 1;</code>
     */
    public boolean hasMaxNumOfCrimes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double maxNumOfCrimes = 1;</code>
     */
    public double getMaxNumOfCrimes() {
      return maxNumOfCrimes_;
    }

    // required double minNumOfCrimes = 2;
    public static final int MINNUMOFCRIMES_FIELD_NUMBER = 2;
    private double minNumOfCrimes_;
    /**
     * <code>required double minNumOfCrimes = 2;</code>
     */
    public boolean hasMinNumOfCrimes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double minNumOfCrimes = 2;</code>
     */
    public double getMinNumOfCrimes() {
      return minNumOfCrimes_;
    }

    // required double crimeAverage = 3;
    public static final int CRIMEAVERAGE_FIELD_NUMBER = 3;
    private double crimeAverage_;
    /**
     * <code>required double crimeAverage = 3;</code>
     */
    public boolean hasCrimeAverage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double crimeAverage = 3;</code>
     */
    public double getCrimeAverage() {
      return crimeAverage_;
    }

    private void initFields() {
      maxNumOfCrimes_ = 0D;
      minNumOfCrimes_ = 0D;
      crimeAverage_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMaxNumOfCrimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinNumOfCrimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCrimeAverage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, maxNumOfCrimes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, minNumOfCrimes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, crimeAverage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, maxNumOfCrimes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, minNumOfCrimes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, crimeAverage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Stats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Stats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Stats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Stats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Stats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Stats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Stats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Stats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Stats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Stats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Stats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.Stats}
     *
     * <pre>
     * Stats
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements StatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_Stats_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_Stats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Stats.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.Stats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxNumOfCrimes_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        minNumOfCrimes_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        crimeAverage_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_Stats_descriptor;
      }

      public Stats getDefaultInstanceForType() {
        return Stats.getDefaultInstance();
      }

      public Stats build() {
        Stats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Stats buildPartial() {
        Stats result = new Stats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxNumOfCrimes_ = maxNumOfCrimes_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minNumOfCrimes_ = minNumOfCrimes_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.crimeAverage_ = crimeAverage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Stats) {
          return mergeFrom((Stats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Stats other) {
        if (other == Stats.getDefaultInstance()) return this;
        if (other.hasMaxNumOfCrimes()) {
          setMaxNumOfCrimes(other.getMaxNumOfCrimes());
        }
        if (other.hasMinNumOfCrimes()) {
          setMinNumOfCrimes(other.getMinNumOfCrimes());
        }
        if (other.hasCrimeAverage()) {
          setCrimeAverage(other.getCrimeAverage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxNumOfCrimes()) {
          
          return false;
        }
        if (!hasMinNumOfCrimes()) {
          
          return false;
        }
        if (!hasCrimeAverage()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Stats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Stats) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double maxNumOfCrimes = 1;
      private double maxNumOfCrimes_ ;
      /**
       * <code>required double maxNumOfCrimes = 1;</code>
       */
      public boolean hasMaxNumOfCrimes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double maxNumOfCrimes = 1;</code>
       */
      public double getMaxNumOfCrimes() {
        return maxNumOfCrimes_;
      }
      /**
       * <code>required double maxNumOfCrimes = 1;</code>
       */
      public Builder setMaxNumOfCrimes(double value) {
        bitField0_ |= 0x00000001;
        maxNumOfCrimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double maxNumOfCrimes = 1;</code>
       */
      public Builder clearMaxNumOfCrimes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxNumOfCrimes_ = 0D;
        onChanged();
        return this;
      }

      // required double minNumOfCrimes = 2;
      private double minNumOfCrimes_ ;
      /**
       * <code>required double minNumOfCrimes = 2;</code>
       */
      public boolean hasMinNumOfCrimes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double minNumOfCrimes = 2;</code>
       */
      public double getMinNumOfCrimes() {
        return minNumOfCrimes_;
      }
      /**
       * <code>required double minNumOfCrimes = 2;</code>
       */
      public Builder setMinNumOfCrimes(double value) {
        bitField0_ |= 0x00000002;
        minNumOfCrimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double minNumOfCrimes = 2;</code>
       */
      public Builder clearMinNumOfCrimes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minNumOfCrimes_ = 0D;
        onChanged();
        return this;
      }

      // required double crimeAverage = 3;
      private double crimeAverage_ ;
      /**
       * <code>required double crimeAverage = 3;</code>
       */
      public boolean hasCrimeAverage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double crimeAverage = 3;</code>
       */
      public double getCrimeAverage() {
        return crimeAverage_;
      }
      /**
       * <code>required double crimeAverage = 3;</code>
       */
      public Builder setCrimeAverage(double value) {
        bitField0_ |= 0x00000004;
        crimeAverage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double crimeAverage = 3;</code>
       */
      public Builder clearCrimeAverage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        crimeAverage_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.Stats)
    }

    static {
      defaultInstance = new Stats(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.Stats)
  }

  public interface ThresholdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required double threshold = 1;
    /**
     * <code>required double threshold = 1;</code>
     */
    boolean hasThreshold();
    /**
     * <code>required double threshold = 1;</code>
     */
    double getThreshold();
  }
  /**
   * Protobuf type {@code com.nvbyte.kya.Threshold}
   *
   * <pre>
   * Threshold
   * </pre>
   */
  public static final class Threshold extends
      com.google.protobuf.GeneratedMessage
      implements ThresholdOrBuilder {
    // Use Threshold.newBuilder() to construct.
    private Threshold(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Threshold(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Threshold defaultInstance;
    public static Threshold getDefaultInstance() {
      return defaultInstance;
    }

    public Threshold getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Threshold(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              threshold_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KYA.internal_static_com_nvbyte_kya_Threshold_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KYA.internal_static_com_nvbyte_kya_Threshold_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Threshold.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Threshold> PARSER =
        new com.google.protobuf.AbstractParser<Threshold>() {
      public Threshold parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Threshold(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Threshold> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double threshold = 1;
    public static final int THRESHOLD_FIELD_NUMBER = 1;
    private double threshold_;
    /**
     * <code>required double threshold = 1;</code>
     */
    public boolean hasThreshold() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double threshold = 1;</code>
     */
    public double getThreshold() {
      return threshold_;
    }

    private void initFields() {
      threshold_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasThreshold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, threshold_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, threshold_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Threshold parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Threshold parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Threshold parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Threshold parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Threshold parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Threshold parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Threshold parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Threshold parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Threshold parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Threshold parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Threshold prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.nvbyte.kya.Threshold}
     *
     * <pre>
     * Threshold
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ThresholdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KYA.internal_static_com_nvbyte_kya_Threshold_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KYA.internal_static_com_nvbyte_kya_Threshold_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Threshold.class, Builder.class);
      }

      // Construct using com.nvbyte.kya.KYA.Threshold.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        threshold_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KYA.internal_static_com_nvbyte_kya_Threshold_descriptor;
      }

      public Threshold getDefaultInstanceForType() {
        return Threshold.getDefaultInstance();
      }

      public Threshold build() {
        Threshold result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Threshold buildPartial() {
        Threshold result = new Threshold(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.threshold_ = threshold_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Threshold) {
          return mergeFrom((Threshold)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Threshold other) {
        if (other == Threshold.getDefaultInstance()) return this;
        if (other.hasThreshold()) {
          setThreshold(other.getThreshold());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasThreshold()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Threshold parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Threshold) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double threshold = 1;
      private double threshold_ ;
      /**
       * <code>required double threshold = 1;</code>
       */
      public boolean hasThreshold() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double threshold = 1;</code>
       */
      public double getThreshold() {
        return threshold_;
      }
      /**
       * <code>required double threshold = 1;</code>
       */
      public Builder setThreshold(double value) {
        bitField0_ |= 0x00000001;
        threshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double threshold = 1;</code>
       */
      public Builder clearThreshold() {
        bitField0_ = (bitField0_ & ~0x00000001);
        threshold_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.nvbyte.kya.Threshold)
    }

    static {
      defaultInstance = new Threshold(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.nvbyte.kya.Threshold)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_CheckInResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_CheckInResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_Telemetry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_Telemetry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_Telemetry_HeartRate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_Telemetry_HeartRate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_Telemetry_Survey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_Telemetry_Survey_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_GeoPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_GeoPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_CheckIn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_CheckIn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_GeoZone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_GeoZone_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_Grid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_Grid_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_GridBounds_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_GridBounds_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_Stats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_Stats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_nvbyte_kya_Threshold_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_nvbyte_kya_Threshold_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tKYA.proto\022\016com.nvbyte.kya\"z\n\017CheckInRe" +
      "sponse\022 \n\030nextRequestTimeInSeconds\030\001 \002(\001" +
      "\022\027\n\017requestFeedback\030\002 \002(\010\022,\n\013currentZone" +
      "\030\003 \002(\0132\027.com.nvbyte.kya.GeoZone\"\216\002\n\tTele" +
      "metry\022\016\n\006userID\030\001 \002(\t\022\026\n\016notificationID\030" +
      "\002 \002(\t\022\016\n\006zoneID\030\003 \002(\005\0226\n\theartRate\030\004 \001(\013" +
      "2#.com.nvbyte.kya.Telemetry.HeartRate\0220\n" +
      "\006survey\030\005 \001(\0132 .com.nvbyte.kya.Telemetry" +
      ".Survey\032*\n\tHeartRate\022\016\n\006before\030\001 \001(\005\022\r\n\005" +
      "after\030\002 \001(\005\0323\n\006Survey\022\022\n\nactualRisk\030\001 \002(",
      "\005\022\025\n\rperceivedRisk\030\002 \002(\005\"?\n\010GeoPoint\022\016\n\006" +
      "userID\030\001 \001(\t\022\020\n\010latitude\030\002 \002(\001\022\021\n\tlongit" +
      "ude\030\003 \002(\001\"f\n\007CheckIn\022\016\n\006userId\030\001 \002(\t\022*\n\010" +
      "location\030\002 \002(\0132\030.com.nvbyte.kya.GeoPoint" +
      "\022\r\n\005speed\030\003 \001(\001\022\020\n\010negDelta\030\004 \002(\010\"{\n\007Geo" +
      "Zone\022\r\n\005level\030\001 \002(\005\022\022\n\ntotalCrime\030\002 \002(\005\022" +
      "\017\n\007updated\030\003 \001(\t\022\016\n\006zoneID\030\004 \002(\005\022,\n\nboun" +
      "daries\030\005 \003(\0132\030.com.nvbyte.kya.GeoPoint\"." +
      "\n\004Grid\022&\n\005tiles\030\001 \003(\0132\027.com.nvbyte.kya.G" +
      "eoZone\":\n\nGridBounds\022,\n\nboundaries\030\001 \003(\013",
      "2\030.com.nvbyte.kya.GeoPoint\"M\n\005Stats\022\026\n\016m" +
      "axNumOfCrimes\030\001 \002(\001\022\026\n\016minNumOfCrimes\030\002 " +
      "\002(\001\022\024\n\014crimeAverage\030\003 \002(\001\"\036\n\tThreshold\022\021" +
      "\n\tthreshold\030\001 \002(\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_nvbyte_kya_CheckInResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_nvbyte_kya_CheckInResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_CheckInResponse_descriptor,
              new String[] { "NextRequestTimeInSeconds", "RequestFeedback", "CurrentZone", });
          internal_static_com_nvbyte_kya_Telemetry_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_nvbyte_kya_Telemetry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_Telemetry_descriptor,
              new String[] { "UserID", "NotificationID", "ZoneID", "HeartRate", "Survey", });
          internal_static_com_nvbyte_kya_Telemetry_HeartRate_descriptor =
            internal_static_com_nvbyte_kya_Telemetry_descriptor.getNestedTypes().get(0);
          internal_static_com_nvbyte_kya_Telemetry_HeartRate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_Telemetry_HeartRate_descriptor,
              new String[] { "Before", "After", });
          internal_static_com_nvbyte_kya_Telemetry_Survey_descriptor =
            internal_static_com_nvbyte_kya_Telemetry_descriptor.getNestedTypes().get(1);
          internal_static_com_nvbyte_kya_Telemetry_Survey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_Telemetry_Survey_descriptor,
              new String[] { "ActualRisk", "PerceivedRisk", });
          internal_static_com_nvbyte_kya_GeoPoint_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_nvbyte_kya_GeoPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_GeoPoint_descriptor,
              new String[] { "UserID", "Latitude", "Longitude", });
          internal_static_com_nvbyte_kya_CheckIn_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_nvbyte_kya_CheckIn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_CheckIn_descriptor,
              new String[] { "UserId", "Location", "Speed", "NegDelta", });
          internal_static_com_nvbyte_kya_GeoZone_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_nvbyte_kya_GeoZone_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_GeoZone_descriptor,
              new String[] { "Level", "TotalCrime", "Updated", "ZoneID", "Boundaries", });
          internal_static_com_nvbyte_kya_Grid_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_nvbyte_kya_Grid_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_Grid_descriptor,
              new String[] { "Tiles", });
          internal_static_com_nvbyte_kya_GridBounds_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_nvbyte_kya_GridBounds_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_GridBounds_descriptor,
              new String[] { "Boundaries", });
          internal_static_com_nvbyte_kya_Stats_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_nvbyte_kya_Stats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_Stats_descriptor,
              new String[] { "MaxNumOfCrimes", "MinNumOfCrimes", "CrimeAverage", });
          internal_static_com_nvbyte_kya_Threshold_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_nvbyte_kya_Threshold_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_nvbyte_kya_Threshold_descriptor,
              new String[] { "Threshold", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
